- content_for :title, "#{@course.mnemonic_number} - #{@course.title} - #{@professor.last_name}"
.course-professor-h1
  .row
    .col-xs-12
      = link_to @professor.full_name, professor_path(@professor), style: "float:right;", class: "btn btn-primary"
  .row style="margin-bottom: 10px;"
    .col-sm-4
      select.course-professor-switcher
        option value="#"="Switch Professor"
        - @professors.each do |p|
          option value="c=#{@course.id}&p=#{p.id}" style="#{(p.id == @professor.id ? 'color: #d9551e;' : '')}"="#{p.separated_name}"
    br.visible-xs
    .col-lg-4.col-lg-offset-2.col-sm-5.col-sm-offset-2
      .review-button
        = link_to "Write your own review for this class!", new_review_path(:c => @course.id, :p => @professor.id), :class => "review-btn btn btn-primary"
    .col-sm-2
      .btn.btn-primary#save-course data-course="#{@course.mnemonic_number}" style='width: 100'= "Save Course"
  .bottom-border

.row.course-breakdown
  .course-stats.col-md-5
    h2 Ratings
    table.table.table-striped
      tr
        td style="width: 15px;"=image_tag "icons/heart.png"
        td style="width: 230px;" Overall
        td=@rev_ratings[:overall] ? @rev_ratings[:overall] : "--"
      tr
        td=image_tag "icons/user_gray.png"
        td Professor
        td=@rev_ratings[:prof] ? @rev_ratings[:prof] : "--"
      tr
        td=image_tag "icons/emoticon_smile.png"
        td Fun-factor
        td=@rev_ratings[:enjoy] ? @rev_ratings[:enjoy] : "--"
      tr
        td=image_tag "icons/pencil.png"
        td Difficulty
        td=@rev_ratings[:difficulty] ? @rev_ratings[:difficulty] : "--"
      tr
        td=image_tag "icons/user_comment.png"
        td Recommend
        td=@rev_ratings[:recommend] ? @rev_ratings[:recommend] : "--"

    - if @reviews.count > 0
      h2 Emphasizes
      table.table.table-striped
        tr
          th
          th Avg Hrs/Week
          th # Reviews
          tr
            td Reading
            td=@rev_emphasizes[:reading] > 0 ? @rev_emphasizes[:reading] : "--"
            td=@rev_emphasizes[:reading_count] > 0 ? @rev_emphasizes[:reading_count] : "--"
          tr
            td Writing
            td= @rev_emphasizes[:writing] > 0 ? @rev_emphasizes[:writing] : "--"
            td= @rev_emphasizes[:writing_count] > 0 ? @rev_emphasizes[:writing_count] : "--"
          tr
            td Group
            td= @rev_emphasizes[:group] > 0 ? @rev_emphasizes[:group] : "--"
            td= @rev_emphasizes[:group_count] > 0 ? @rev_emphasizes[:group_count] : "--"
          tr
            td Other HW
            td=@rev_emphasizes[:homework] > 0 ? @rev_emphasizes[:homework] : "--"
            td=@rev_emphasizes[:homework_count] > 0 ? @rev_emphasizes[:homework_count] : "--"
          tr
            td Tests/Midterms
            td --
            td=@rev_emphasizes[:test_count] > 0 ? @rev_emphasizes[:test_count] : "--"
  .course-grades.col-md-7
    .row
      h2 Grades (cumulative since Fall 2009)
      .col-xs-8
        - if @grades.size > 0
          = render :partial => "grades", :locals => {:grades => @grades}
        - else
          p There aren't any grade distributions available for this class. Sorry!
      .col-xs-4
        .row
        - @letters.each_with_index do |letter, i|
          .row
            span
              span.glyphicon.glyphicon-stop style="color:#{@colors[i]}"
            span
              = letter
            span id="#{i}-percent"
              | (100%)
    .row style="font-size:10px"
      .col-xs-12
        | * O contains grades less than C-, withdrawals, pass/fails, and audits
    .row
      .col-xs-6
        input#all-semesters type="checkbox" checked="true" data-semester-id="all"
          | All Semesters

    - @semesters.reverse.each_slice(2) do |slice|
      .row
        .col-xs-6
          input.grade-checkbox type="checkbox" data-semester-id="#{slice[0].id}"
            = slice[0].to_s
        - if slice[1]
          .col-xs-6
            input.grade-checkbox type="checkbox" data-semester-id="#{slice[1].id}"
              = slice[1].to_s



- if @total_review_count > 0
  - if @total_review_count > 1
    h2
      - if @reviews_with_comments.count == 1
        = "#{@total_review_count} Reviews -- #{@reviews_with_comments.count} Comment"
      - else
        = "#{@total_review_count} Reviews -- #{@reviews_with_comments.count} Comments"
  - else
    h2
      - if @reviews_with_comments.count == 1
        = "1 Review -- 1 Comment"
      - else
        = "1 Review -- 0 Comments"
  - if @reviews_with_comments.count > 1
    .row
      .col-sm-6
        = will_paginate @reviews
      .col-sm-2.col-xs-4
        .pagination.sort-by
          | Sort by:
      .col-sm-3 style=(@reviews.total_pages > 1 ? "margin-top:13px;" : "margin-bottom:13px;")
        
      .visible-xs
        br


  .single-review
  -# adds top line
  - @reviews.each do |r|
    .single-review
      .row
        ul.meta
          li= r.created_at.strftime("%Y-%m-%d")
          - if r.semester_id
            .taken
              = "#{r.semester.season} #{r.semester.year}"
        .row.visible-xs.visible-sm style="margin-left: 0px;"
          .col-xs-1.overall
          .col-xs-1= r.overall
          .col-xs-1.professor_rating
          .col-xs-1= r.professor_rating
          .col-xs-1.enjoyability
          .col-xs-1= r.enjoyability
          .col-xs-1.difficulty
          .col-xs-1= r.difficulty
          .col-xs-1.recommend
          .col-xs-1= r.recommend
        .comment
          = h(r.comment).gsub(/\n/, '<br/>').html_safe
        ul.ratings.visible-md.visible-lg
          li.overall= r.overall
          li.professor_rating= r.professor_rating
          li.enjoyability= r.enjoyability
          li.difficulty= r.difficulty
          li.recommend= r.recommend
      br
      .row
        .col-xs-5.col-sm-7.score style="font-size:12px;margin-top: 2.5px;"
          - if r.votes_count > 0
            = r.votes_for
            | out of
            = r.votes_count
            | people found this helpful.
        .col-xs-3 style="margin-top: 2.5px;"
          .rating style="font-size:12px;text-align:center;"
            | Was this review helpful?
        .col-xs-2.col-sm-1
          .btn.btn-primary.btn-xs id="vote_up_#{r.id}" style="#{'font-size:12px;text-align:center;' + (current_user.voted_against?(r) ? 'opacity: 0.4;' : '')}" disabled="#{(r.user == current_user ? true : false)}"
            | Yes
        .col-xs-2.col-sm-1
          .btn.btn-primary.btn-xs id="vote_down_#{r.id}" style="#{'font-size:12px;text-align:center;' + (current_user.voted_for?(r) ? 'opacity: 0.4;' : '')}" disabled="#{(r.user == current_user ? true : false)}"
            | No
  = will_paginate @reviews
- else
  h2 No reviews :(
  = link_to "Be the first to write a review for this class!", new_review_path(:c => @course.id, :p => @professor.id), :class => "btn btn-primary"

#calendar

javascript:
  $(document).ready(function() {
    var cloud = #{@word_cloud_on}
    if (cloud) {
      var arr = #{@word_array.to_json};
      $(function() {
        $("#word_cloud").jQCloud(arr, {
          removeOverflowing: true,
          width: 300,
          height: 300
        });
      });
    }
  });



coffee:
  donut = new App.GradeDonut('#grades', { width: 300, height: 300})
    .setData(gon.grades, gon.semester)
    .render()

  window.redraw = () ->
    console.log("It fucking works!")
    donut = new App.GradeDonut('#grades', { width: 300, height: 300})
      .setData(gon.grades, gon.semester)
      .render()
