/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, vendor/assets/stylesheets,
 * or vendor/assets/stylesheets of plugins, if any, can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the top of the
 * compiled file, but it's generally better to create a new file per style scope.
 *
 *= require_self
 * BS3-switch used for settings toggles. 
 *= require bootstrap3-switch
 *= require jquery-ui/slider
 *= require jqcloud
 *= require fullcalendar
 *= require slick
 *= require slick-theme
 *= require bootstrap_overrides
 *= require header
 *= require footer
 *= require sidebar
 *= require welcome
 *= require departments 
 *= require reviews
 *= require scheduler
 *= require books
 */
$screen-sm: 850px;

@import "variables";
@import "bootstrap-sprockets";
@import "bootstrap";
@import "jquery-ui/autocomplete";

$nprogress-color: $blue;
$nprogress-height: 4.5px;
@import "nprogress";
@import "nprogress-bootstrap";

//rest of variables
@mixin ellipsis {
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

@font-face {
  font-family: 'Lato';
  font-style: normal;
  font-weight: 300;
  src: asset-url('Lato-Light.ttf') format('woff2');
}

/* latin */
@font-face {
  font-family: 'Lato';
  font-style: normal;
  font-weight: 400;
  src: asset-url('Lato-Regular.ttf') format('woff2');
}

@font-face {
  font-family: 'comic-sans';
  src: asset-url('comic.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'HelveticaNeue-Medium';
  src: asset-url('HelveticaNeue-Medium.ttf') format('truetype');
  font-weight: medium;
  font-style: normal;
}

@font-face {
  font-family: "Rockwell";
  src: asset-url('rockwell.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
}

html, body {
  height: 100%;
  width: 100%;
}

body {
  font-family: "Lato", sans-serif;
  background-color: $blue;
  overflow: scroll;
  // overflow: hidden;
  font-size: $regular-font-size;
}

aside {
  width: $sidebar-width !important;
  float: left;
  @media only screen and (min-width: $screen-sm-min) {
    display: block!important;
  }
  @media only screen and (max-width: $screen-sm) {
    display: none;
    background-color: $blue;
    position: relative;
    z-index: 4;
    height: 100%
  }
}

#header-navbar {
  border-bottom: 1px solid #e8e8e8;
  z-index: 1;
}

section#main {
  margin-left: $sidebar-width;
  position: fixed;
  top: $navbar-height;
  bottom: 0;
  left: 0;
  right: 0;

  @media only screen and (max-width: $screen-sm) {
    margin-left: 0;
  }
  
  // http://stackoverflow.com/questions/7198282/how-to-make-div-occupy-remaining-height
  // bottom: 0;
  // top: $navbar-height;
  // right: 0;
  // left: 0;
  // position: absolute;

  #main-container {
    background-color: #EEE;
    height: 100%;
    overflow: auto;
    padding: 40px 50px;

    #header {
      max-width: $content-max-width;
      margin-left: auto;
      margin-right: auto;
      padding-left: 0px;
      padding-right: 0px;
      margin-bottom: 30px;
      @include flexbox();
      @include justify-content(space-between);
      @include align-items(center);

      #course-name {
        padding-left: 0px;
        @include flex(1);
      }

      #filter .row {
        float: right;
      }

      #save-course-button {
        float: right;
      }
    }

    #content-container {
      box-shadow: 0px 1px 2px 0px #B8B8B8;
      background-color: white;
      padding-bottom: 20px;
      padding-top: 20px;
      max-width: $content-max-width;
    }

    @media only screen and (max-width: 520px) {
      padding: 30px 30px;
    }
  }
}

#welcome-container {
  margin-top: 20px;
  margin-bottom: 50px; // height of footer
  color: white;
  #about, #terms, #privacy {
    a {
      color: white;
    }
  }
}

select {
  @extend .form-control;
  border-radius: 0px;
}

#browsing-content {
  padding-left: 0px;
  padding-right: 0px;

  #departments {
    margin-top: -20px;
  }
}

#alert, #notice {
  color: white;
  float: center;
  text-align: center;
  background-color: $orange;
  padding: 5px 0;
  vertical-align: middle;
  font-size: $sidebar-font-size;
  padding-left: 30px;
}

#close-notice, #close-alert {
  float: right;
  margin-right: 20px;
  a {
    color: white;
  }
}

.brand {
  font-family: "Rockwell";
}

.orange-title {
  font-size: $subtitle-font-size;
  color: $orange;
}

.form-row {
  margin-top: 10px;
}

.text-white {
  color: white;
}

.page-title {
  margin-top: 0px;
  margin-bottom: 0px;
  font-weight: 300;
}

@media (max-width: $screen-sm) {
    .navbar-default .navbar-brand {
      background-color: #fff;
    }
    #logo {
      margin-left: -30px;
    }
}


// code below handles transition navbar button transition from hamburger to x
$transition-dur: .2s;
// same as native bootstrap button-size
$button-size: 22px;

// line element. Mixin so that it can be reused
@mixin line {
  display: inline-block;
  width: $button-size;
  height: 2px;
  background-color: $gray;
  border-radius: 2px; 
  transition: $transition-dur;
}

.lines {
  @include line;
  position: relative; 

  // inserts top and bottom lines via css. Are not actually in DOM
  &:before, &:after {
   @include line;
    position: absolute;
    left:0;
    content: '';
  }
  &:before { 
    top: -6px; 
  }
  &:after { 
    top: 6px; 
  }
}

.lines-button{
  // place lines button on left if not mobile
  @media only screen and (min-device-width: $screen-xs){
    position: absolute;
    left: 210px;
  }

  // place lines-button on right if mobile
  @media only screen and (max-device-width:$screen-xs){
    float: right !important;
    position:relative;
    margin-right: 15px;
  }

  // set height to length of navbar and width 
  // to bootstrap default
  border: none;
  height: 60px;
  width: 42px;
  padding-bottom: 9px;
  background-color: transparent;
  &:focus{
    outline: 0;
  }

  // change lines to blue on hover
  &:hover{
    .lines:before, .lines:after, .lines{
      background-color: $blue;
    }
  }
}

.lines-button {
  .lines{
    transition: background $transition-dur 0s ease;

    // set transition origin and duration
    &:before, &:after{
      // transition origin set to center
    -webkit-transform-origin: 50% 50%;
            transform-origin: 50% 50%;

      transition: top $transition-dur $transition-dur ease, -webkit-transform $transition-dur ease;
      transition: top $transition-dur $transition-dur ease, transform $transition-dur ease;
    }
  }
}

.lines-button.closed{
  .lines {
    transition: background $transition-dur 0s ease;
    background: transparent;

    &:before, &:after{
      transition: top $transition-dur ease, -webkit-transform $transition-dur $transition-dur ease; //delay the formation of the x till the minus is formed  
      transition: top $transition-dur ease, transform $transition-dur $transition-dur ease; //delay the formation of the x till the minus is formed  
      top:0;
      width: $button-size;
    }

    // rotate before and after to create the x
    &:before{
      -webkit-transform: rotate3d(0,0,1,45deg); 
              transform: rotate3d(0,0,1,45deg); 
    }
    &:after{
      -webkit-transform: rotate3d(0,0,1,-45deg); 
              transform: rotate3d(0,0,1,-45deg); 
    }
  }
}

// for use with javascript. Eliminates color-change lag on hover
.notransition {
  transition: none !important;
}
